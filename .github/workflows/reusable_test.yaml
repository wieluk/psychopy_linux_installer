name: Reusable Test Workflow

on:
  workflow_call:
    inputs:
      build-mode:
        required: false
        type: boolean
        default: false
        description: 'Whether to run tests with build mode enabled'
      quick-mode:
        required: false
        type: boolean
        default: false
        description: 'Run in quick mode with only ubuntu-latest as the OS'

jobs:
  run-installer:
    runs-on: ${{ inputs.quick-mode && fromJson(format('["{0}"]', matrix.os)) || fromJson(format('["self-hosted", "{0}"]', matrix.os)) }}
    strategy:
      matrix:
        os: ${{ inputs.quick-mode && fromJson('["ubuntu-latest"]') || fromJson('["ubuntu-24.04", "ubuntu-22.04", "ubuntu-20.04", "debian-12", "debian-11", "fedora-39", "fedora-40", "pop-22.04", "rocky-9.4", "centos-9", "manjarolinux-24", "opensuse-leap-15.6", "linuxmint-22"]') }}
        python_version: ${{ inputs.build-mode && fromJson('["3.10"]') || fromJson('["3.8", "3.9", "3.10"]') }}
        psychopy_version: ${{ inputs.build-mode && fromJson('["latest"]') || fromJson('["latest", "2024.1.4", "2023.2.3"]') }}
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup environment and install
        env:
          PYTHON_VERSION: ${{ matrix.python_version }}
          PSYCHOPY_VERSION: ${{ matrix.psychopy_version }}
        run: |
          if [ "$PSYCHOPY_VERSION" == "latest" ]; then
            PSYCHOPY_VERSION_CLEAN=$(curl -s https://pypi.org/pypi/psychopy/json | jq -r .info.version)
          else
            PSYCHOPY_VERSION_CLEAN=$PSYCHOPY_VERSION
          fi
          PSYCHOPY_VERSION_CLEAN=$(echo "$PSYCHOPY_VERSION_CLEAN" | tr -d ',;')
          echo "PSYCHOPY_VERSION_CLEAN=$PSYCHOPY_VERSION_CLEAN" >> $GITHUB_ENV
          
          sudo chmod +x $GITHUB_WORKSPACE/psychopy_linux_installer
          sudo rm -rf /tmp_dir
          sudo mkdir /tmp_dir
          sudo chown -R $USER:$(id -gn $USER) /tmp_dir
          cp -rf $GITHUB_WORKSPACE/.github/PsychoPy_tests /tmp_dir/
          
          BUILD_FLAG="${{ inputs.build-mode && '--build=both' || '' }}"
          ARGS="--python-version=$PYTHON_VERSION --psychopy-version=$PSYCHOPY_VERSION --additional-packages=psychopy_bids,seedir --install-dir=/tmp_dir/psychopy --no-versioned-install-dir --force --non-interactive $BUILD_FLAG"
          $GITHUB_WORKSPACE/psychopy_linux_installer $ARGS

      - name: Verify PsychoPy installation and version
        id: verify-psychopy
        run: |
          if ! /tmp_dir/psychopy/bin/psychopy -h &> /dev/null; then
            echo "PsychoPy help command failed"
            exit 1
          fi
          
          if ! /tmp_dir/psychopy/bin/psychopy -v | grep -qE "PsychoPy3, version [0-9]+\.[0-9]+\.[0-9]+"; then
            echo "PsychoPy version check failed"
            exit 1
          else
            /tmp_dir/psychopy/bin/psychopy -v
          fi
        
      - name: Run basic PsychoPy test
        id: psychopy-test
        if: ${{ !inputs.quick-mode }}
        run: |
          cd /tmp_dir/PsychoPy_tests
          /tmp_dir/psychopy/bin/python /tmp_dir/PsychoPy_tests/psychopy_test.py 2>&1 | tee /tmp_dir/PsychoPy_tests/psychopy_test.log
          set -e
          if ! tail -n 1 /tmp_dir/PsychoPy_tests/psychopy_test.log | grep -qE "Trial 3: Elapsed time .* seconds"; then
            echo "::error::PsychoPy test output verification failed"
            exit 1
          fi

      - name: Run extended PsychoPy Tests
        id: psychopy-test-extended
        if: ${{ !inputs.quick-mode }}
        run: |
          output=$(/tmp_dir/psychopy/bin/python /tmp_dir/PsychoPy_tests/psychopy_test_extended.py)
          tests=("Visual" "Keyboard" "Image" "Timing")
          for test in "${tests[@]}"; do
            if ! echo "$output" | grep -qE "${test} Test Passed"; then
              echo "::error::${test} Test Failed"
              exit 1
            fi
          done
          echo "All tests passed successfully."

      - name: Verify BIDS installation simple
        id: verify-bids
        run: |
          cd /tmp_dir/PsychoPy_tests/BIDS
          if ! /tmp_dir/psychopy/bin/python bids_test_simple.py; then
            echo "::error::BIDS simple test execution failed"
            exit 1
          fi
    
      - name: Verify BIDS installation exp_handler
        id: verify-bids-handler
        if: ${{ !inputs.quick-mode }}
        run: |
          cd /tmp_dir/PsychoPy_tests/BIDS
          if ! /tmp_dir/psychopy/bin/python bids_test_exp_handler.py; then
            echo "::error::BIDS exp_handler test execution failed"
            exit 1
          fi
      
      - name: Cleanup
        if: always()
        run: |
          sudo rm -rf /tmp_dir ~/Desktop/* ~/.local/share/applications/* 
