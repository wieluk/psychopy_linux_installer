name: Reusable Release Creation

on:
  workflow_call:

jobs:
  create-release:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Create release if not exists
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          INSTALLER_VERSION=$(grep -m1 '^# *Version:' psychopy_linux_installer | sed 's/^# *Version: *//')
          if [ -z "$INSTALLER_VERSION" ]; then
            echo "Failed to extract version from script."
            exit 1
          fi

          echo "INSTALLER_VERSION=$INSTALLER_VERSION" >> $GITHUB_ENV

          RELEASE_TAG="v${INSTALLER_VERSION}"
          API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/tags/${RELEASE_TAG}"
          
          RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "$API_URL")
          if echo "$RESPONSE" | grep -q '"id":'; then
            echo "Release ${RELEASE_TAG} already exists."
            echo "release_exists=true" >> $GITHUB_ENV
            UPLOAD_URL=$(echo "$RESPONSE" | jq -r '.upload_url' | sed 's/{?name,label}//')
            echo "upload_url=$UPLOAD_URL" >> $GITHUB_ENV
          else
            echo "Release ${RELEASE_TAG} does not exist. Creating release."
            
            CREATE_RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" -d @- "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases" <<EOF
              {
                "tag_name": "${RELEASE_TAG}",
                "name": "${RELEASE_TAG}",
                "body": "PsychoPy Linux Installer version ${INSTALLER_VERSION}",
                "draft": false,
                "prerelease": false
              }
          EOF
            )
            
            if echo "$CREATE_RESPONSE" | grep -q '"id":'; then
              echo "release_exists=false" >> $GITHUB_ENV
              UPLOAD_URL=$(echo "$CREATE_RESPONSE" | jq -r '.upload_url' | sed 's/{?name,label}//')
              echo "upload_url=$UPLOAD_URL" >> $GITHUB_ENV
            else
              echo "Failed to create release."
              echo "Error response: $CREATE_RESPONSE"
              exit 1
            fi
          fi

          if [ -f "README.md" ]; then
            curl -s -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: text/markdown" \
              --data-binary @README.md \
              "${UPLOAD_URL}?name=README.md"
          fi

          if [ -f "psychopy_linux_installer" ]; then
            curl -s -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/x-shellscript" \
              --data-binary @psychopy_linux_installer \
              "${UPLOAD_URL}?name=psychopy_linux_installer"
          fi 