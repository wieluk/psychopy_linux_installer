name: Run PsychoPy Installer on Multiple Linux OS

on:
  push:
    branches:
      - main
      - action-refactor
    paths:
      - psychopy_linux_installer
      - .github/workflows/test_installer.yaml
  workflow_dispatch:

jobs:
  syntax-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run ShellCheck
        run: |
          sudo apt-get install -y shellcheck
          bash -n $GITHUB_WORKSPACE/psychopy_linux_installer
          shellcheck -e SC1017 -e SC1091 $GITHUB_WORKSPACE/psychopy_linux_installer

  run-installer:
    needs: syntax-check
    runs-on: [self-hosted, "${{ matrix.os }}"]
    strategy:
      matrix:
        os: [ubuntu-24.04 , ubuntu-22.04, ubuntu-20.04, debian-12, debian-11, fedora-39, fedora-40, pop-22.04, rocky-9.4, centos-9]
        python_version: ['3.8.19', '3.9.19', '3.10.14']
        psychopy_version: ['latest', '2023.2.3', '2024.1.4']
      fail-fast: false
    steps:
      - name: Determine PsychoPy version
        run: |
          PSYCHOPY_VERSION_CLEAN=${{ matrix.psychopy_version }}
          if [ "$PSYCHOPY_VERSION_CLEAN" == "latest" ]; then
            PSYCHOPY_VERSION_CLEAN=$(curl -s https://pypi.org/pypi/psychopy/json | jq -r .info.version)
          fi
          PSYCHOPY_VERSION_CLEAN=$(echo "$PSYCHOPY_VERSION_CLEAN" | tr -d ',;')
          echo "PSYCHOPY_VERSION_CLEAN=$PSYCHOPY_VERSION_CLEAN" >> $GITHUB_ENV
      
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Prepare environment
        run: |
          sudo chmod +x $GITHUB_WORKSPACE/psychopy_linux_installer
          sudo rm -rf /tmp/*
          sudo rm -rf /tmp_dir
          sudo mkdir /tmp_dir
          sudo chown -R $USER:$USER /tmp_dir
          cp -rf $GITHUB_WORKSPACE/.github/PsychoPy_tests /tmp_dir/

      - name: Run PsychoPy Linux Installer
        id: run-installer
        continue-on-error: true
        run: |
          ARGS="--python-version=${{ matrix.python_version }} --psychopy-version=${{ matrix.psychopy_version }} --additional-packages=psychopy_bids,seedir --install-dir=/tmp_dir/psychopy --no-versioned-install-dir --force"
          $GITHUB_WORKSPACE/psychopy_linux_installer $ARGS
      - name: Verify PsychoPy installation and version
        id: verify-psychopy
        continue-on-error: true
        run: |
          if ! /tmp_dir/psychopy/bin/psychopy -h &> /dev/null; then
            echo "PsychoPy help command failed"
            exit 1
          fi
          
          if ! /tmp_dir/psychopy/bin/psychopy -v | grep -qE "PsychoPy3, version [0-9]+\.[0-9]+\.[0-9]+"; then
            echo "PsychoPy version check failed"
            exit 1
          fi
      
      - name: run basic PsychoPy test
        id: psychopy-test
        continue-on-error: true
        run: |
          cd /tmp_dir/PsychoPy_tests
          /tmp_dir/psychopy/bin/python /tmp_dir/PsychoPy_tests/psychopy_test.py 2>&1 | tee /tmp_dir/PsychoPy_tests/psychopy_test.log
          set -e
          if ! tail -n 1 /tmp_dir/PsychoPy_tests/psychopy_test.log | grep -qE "Trial 3: Elapsed time .* seconds"; then
            echo "::error::PsychoPy test output verification failed"
            exit 1
          fi

      - name: Run extended PsychoPy Tests
        id: psychopy-test-extended
        continue-on-error: true
        run: |
          output=$(/tmp_dir/psychopy/bin/python /tmp_dir/PsychoPy_tests/psychopy_test_extended.py)
          tests=("Visual" "Keyboard" "Image" "Timing")
          for test in "${tests[@]}"; do
            if ! echo "$output" | grep -qE "${test} Test Passed"; then
              echo "::error::${test} Test Failed"
              exit 1
            fi
          done
          echo "All tests passed successfully."

      - name: Verify BIDS installation simple
        id: verify-bids
        continue-on-error: true
        run: |
          cd /tmp_dir/PsychoPy_tests/BIDS
          if ! /tmp_dir/psychopy/bin/python bids_test_simple.py; then
            echo "::error::BIDS simple test execution failed"
            exit 1
          fi
    
      - name: Verify BIDS installation exp_handler
        id: verify-bids-handler
        continue-on-error: true
        run: |
          cd /tmp_dir/PsychoPy_tests/BIDS
          if ! /tmp_dir/psychopy/bin/python bids_test_exp_handler.py; then
            echo "::error::BIDS exp_handler test execution failed"
            exit 1
          fi
        
      - name: Record result
        run: |
          STATUS="❌"
          if [[ "${{ steps.run-installer.outcome }}" == "success" && 
                "${{ steps.verify.outcome }}" == "success" && 
                "${{ steps.psychopy-test.outcome }}" == "success" && 
                "${{ steps.psychopy-test-extended.outcome }}" == "success" && 
                "${{ steps.verify-bids.outcome }}" == "success" && 
                "${{ steps.verify-bids-handler.outcome }}" == "success"  ]]; then
            STATUS="✅"
          fi
      
          RESULT_FILE="/tmp_dir/result-${{ matrix.os }}-${{ matrix.python_version }}-${{ env.PSYCHOPY_VERSION_CLEAN }}.md"
          echo "| ${{ matrix.os }} | ${{ matrix.python_version }} | ${{ env.PSYCHOPY_VERSION_CLEAN }} | $STATUS |" >> $RESULT_FILE
          cat $RESULT_FILE
      
      - name: Upload result artifact
        uses: actions/upload-artifact@v4
        with:
          name: result-${{ matrix.os }}-${{ matrix.python_version }}-${{ env.PSYCHOPY_VERSION_CLEAN }}
          path: /tmp_dir/result-${{ matrix.os }}-${{ matrix.python_version }}-${{ env.PSYCHOPY_VERSION_CLEAN }}.md
      
      - name: Cleanup
        if: always()
        run: |
          sudo rm -rf /tmp/* /tmp_dir ~/Desktop/* ~/.local/share/applications/*

  update-readme:
    needs: run-installer
    if: ${{ failure() || success() }}
    runs-on: [self-hosted, ubuntu-24.04]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Pull changes from remote
        run: |
          git fetch origin
          git reset --hard origin/${{ github.ref_name }}

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: true

      - name: Create and save result table
        run: |
          cat << EOF > results.md
          ### Report generated on $(date '+%Y-%m-%d')
          ### [Link to run results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

          | OS | Python Version | PsychoPy Version | Status |
          |---|---|---|---|
          EOF

          cat ./artifacts/*.md | sort -t'|' -k2,2 -k3,3 -k4,4 -k5,5 >> results.md

          if [ -s results.md ]; then
            cp results.md .github/installation_results.md
          else
            echo "::warning::results.md is empty; skipping save."
          fi
      
      - name: Commit and push changes
        run: |
          git add .github/installation_results.md
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit."
          else
            git commit -m "Update installation results"
            git push --force
          fi
  
      - name: Check for failed statuses
        run: |
          if grep -q "❌" .github/installation_results.md && ! grep -q "✅" .github/installation_results.md; then
            echo "All entries failed or no successful entries found. Failing the job."
            exit 1
          fi