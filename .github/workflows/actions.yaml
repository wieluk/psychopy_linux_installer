name: Run PsychoPy Installer on Multiple OS

on:
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.github/workflows/build_python_wxpython.yaml'
      - 'builds/**'

jobs:
  syntax-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install ShellCheck
        run: sudo apt-get install -y shellcheck

      - name: Check Bash Syntax
        run: bash -n $GITHUB_WORKSPACE/psychopy_linux_installer.sh

      - name: Run ShellCheck
        run: shellcheck -e SC1090 -e SC1091 -e SC2153 $GITHUB_WORKSPACE/psychopy_linux_installer.sh

  run-installer:
    needs: syntax-check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-22.04, ubuntu-20.04 , debian-12, debian-11, centos-9, fedora-39]
        python_version: ['3.8.16', '3.9.19', '3.10.14']
        psychopy_version: ['latest','git', '2023.2.3', '2024.1.4']
        bids_version: ['','git', '2023.2.0']
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Make script executable
        run: chmod +x $GITHUB_WORKSPACE/psychopy_linux_installer.sh
      
      - name: create tmp
        run: |
          sudo rm -rf /tmp_dir
          sudo mkdir /tmp_dir
          sudo chmod -R 777 /tmp_dir
          sudo chown -R $USER:$USER /tmp_dir

      - name: Run PsychoPy Linux Installer
        id: run-installer
        run: |
          ARGS="--python_version=${{ matrix.python_version }} --psychopy_version=${{ matrix.psychopy_version }} --bids_version=${{ matrix.bids_version }} --install_dir=/tmp_dir --force"
          sudo $GITHUB_WORKSPACE/psychopy_linux_installer.sh $ARGS | tee /tmp_dir/psychopy_install_output.log
        shell: bash

      - name: Extract PsychoPy start command
        id: extract-command
        continue-on-error: true
        run: |
          PSYCHOPY_COMMAND=$(tail -n 1 /tmp_dir/psychopy_install_output.log)
          if [[ ! "$PSYCHOPY_COMMAND" =~ .*/psychopy_.*_py_.*/bin/psychopy$ ]]; then
            echo "Invalid PsychoPy command format: $PSYCHOPY_COMMAND"
            exit 1
          fi
          sudo chmod -R 777 ${GITHUB_WORKSPACE}
          sudo chown -R $USER:$USER ${GITHUB_WORKSPACE}
          PYTHON_VENV="$(dirname "$PSYCHOPY_COMMAND")/python"

          echo "PYTHON_VENV command: $PYTHON_VENV"
          echo "PYTHON_VENV=$PYTHON_VENV" >> $GITHUB_ENV
          echo "PYTHON_VENV=$PYTHON_VENV" >> $GITHUB_OUTPUT
          echo "PsychoPy start command: $PSYCHOPY_COMMAND"
          echo "PSYCHOPY_COMMAND=$PSYCHOPY_COMMAND" >> $GITHUB_ENV
          echo "psychopy_command=$PSYCHOPY_COMMAND" >> $GITHUB_OUTPUT

      - name: Verify PsychoPy installation with --help
        id: verify-help
        continue-on-error: true
        run: sudo ${{ env.PSYCHOPY_COMMAND }} -h
        shell: bash

      - name: Verify PsychoPy installation with --version
        id: verify-version
        continue-on-error: true
        run: |
          output=$(sudo ${{ env.PSYCHOPY_COMMAND }} -v 2>&1)
          echo "$output"
          version_line=$(echo "$output" | grep -E "PsychoPy3, version [0-9]+\.[0-9]+\.[0-9]+")
          if [ "$output" != "$version_line" ]; then
            echo "::error::PsychoPy version check failed"
            exit 1
          fi
        shell: bash

      - name: Import PsychoPy test
        id: psychopy-test
        continue-on-error: true
        run: |
          ${{ env.PYTHON_VENV }} $GITHUB_WORKSPACE/.github/workflows/psychopy_test.py 2>&1 | tee /tmp_dir/psychopy_test.log
          #set -e
          #if ! tail -n 1 /tmp_dir/psychopy_test.log | grep -qE "Trial 3: Elapsed time .* seconds"; then
          #  echo "::error::PsychoPy test output verification failed"
          #  exit 1
          #fi

      - name: Verify BIDS installation
        if: matrix.bids_version != ''
        id: verify-bids
        continue-on-error: true
        run: |
          ${{ env.PYTHON_VENV }} $GITHUB_WORKSPACE/.github/workflows/bids_test_simple.py 2>&1 | tee /tmp_dir/output_simple.log
          set -e
          #if ! tail -n 1 /tmp_dir/output_simple.log | grep -qE "└─participants.json"; then
          #  echo "::error::BIDS test output verification failed"
          #  exit 1
          #fi

          ${{ env.PYTHON_VENV }} $GITHUB_WORKSPACE/.github/workflows/bids_test_exp_handler.py 2>&1 | tee /tmp_dir/output_exp_handler.log
          set -e
          #if ! tail -n 1 /tmp_dir/output_exp_handler.log | grep -qE "└─participants.json"; then
          #  echo "::error::BIDS test output verification failed"
          #  exit 1
          #fi

      - name: Record result
        run: |
          STATUS="❌"
          if [[ "${{ steps.run-installer.outcome }}" == "success" && "${{ steps.extract-command.outcome }}" == "success" && "${{ steps.verify-help.outcome }}" == "success" && "${{ steps.verify-version.outcome }}" == "success" && "${{ steps.psychopy-test.outcome }}" == "success" && ( -z "${{ matrix.bids_version }}" || "${{ steps.verify-bids.outcome }}" == "success" ) ]]; then
            STATUS="✅"
          fi
          RESULT_FILE="/tmp_dir/result-${{ matrix.os }}-${{ matrix.python_version }}-${{ matrix.psychopy_version }}-${{ matrix.bids_version }}.md"
          echo "| ${{ matrix.os }} | ${{ matrix.python_version }} | ${{ matrix.psychopy_version }} | ${{ matrix.bids_version }} | $STATUS |" >> $RESULT_FILE
          cat $RESULT_FILE

      - name: Upload result artifact
        uses: actions/upload-artifact@v4
        with:
          name: result-${{ matrix.os }}-${{ matrix.python_version }}-${{ matrix.psychopy_version }}-${{ matrix.bids_version }}
          path: /tmp_dir/result-${{ matrix.os }}-${{ matrix.python_version }}-${{ matrix.psychopy_version }}-${{ matrix.bids_version }}.md

      - name: remove tmp
        run: |
          sudo rm -r /tmp_dir

  update-readme:
    needs: run-installer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Pull changes from remote
        run: git pull

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          merge-multiple: true

      - name: Create result table
        run: |
          current_date=$(date '+%Y-%m-%d')
          echo "# Report generated on $current_date" > results.md
          echo "" >> results.md
          echo "| OS | Python Version | PsychoPy Version | BIDS Version | Status |" >> results.md
          echo "|---|---|---|---|---|" >> results.md
          for file in ./artifacts/*.md; do
            cat "$file" >> results.md
          done

          # Sort the results by OS, Python Version, PsychoPy Version, BIDS Version, and Status
          {
            head -n 4 results.md
            tail -n +5 results.md | sort -t'|' -k2,2 -k3,3 -k4,4 -k5,5 -k6,6
          } > sorted_results.md

          mv sorted_results.md results.md

      - name: Update README.md with results
        run: |
          sed -i '/<!-- BEGIN INSTALLATION_RESULTS -->/,/<!-- END INSTALLATION_RESULTS -->/{//!d}' README.md
          sed -i '/<!-- BEGIN INSTALLATION_RESULTS -->/r results.md' README.md

      - name: Commit and push changes
        run: |
          git add README.md
          git commit -m "Update README.md with PsychoPy installation results"
          git push

      - name: Check for any successful statuses
        run: |
          if ! grep -q "✅" results.md; then
            echo "No successful entries found. Failing the job."
            exit 1
