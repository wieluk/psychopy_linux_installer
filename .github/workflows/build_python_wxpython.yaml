name: Build Python/wxPython and upload to cloud
on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build_python_wxpython.yaml'

jobs:
  build:
    runs-on: [self-hosted, "${{ matrix.os }}"]
    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-22.04, ubuntu-20.04 , debian-12, debian-11, centos-9, fedora-39, pop-22.04, rocky-9.4, manjaro]
        python_version: ['3.8.19', '3.9.19', '3.10.14']
      fail-fast: false
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install curl
        run: |
          if command -v apt-get > /dev/null; then
            sudo apt-get update || true
            sudo apt-get install -y curl
          elif command -v pacman > /dev/null; then
            sudo pacman -Syu --noconfirm
            sudo pacman -S --noconfirm curl
          elif command -v dnf > /dev/null; then
            sudo dnf check-update || true
            sudo dnf install -y curl
          elif command -v yum > /dev/null; then
            sudo yum check-update || true
            sudo yum install -y curl
          else
            echo "Unsupported package manager"
            exit 1
          fi

      - name: Check if Python and wxPython files already exist
        id: check-files
        run: |
          PYTHON_VERSION="${{ matrix.python_version }}"
          OS_VERSION="${{ matrix.os }}"
          PYTHON_MAJOR="${PYTHON_VERSION%%.*}"
          PYTHON_MINOR="${PYTHON_VERSION#*.}"
          PYTHON_MINOR="${PYTHON_MINOR%%.*}"
          NEXTCLOUD_URL="https://cloud.uni-graz.at/index.php/s/o4tnQgN6gjDs3CK/download?path=python_${PYTHON_VERSION}_${OS_VERSION}.tar.gz"
          WHEEL_NAME="wxPython-0-cp${PYTHON_MAJOR}${PYTHON_MINOR}-cp${PYTHON_MAJOR}${PYTHON_MINOR}-linux_x86_64-${OS_VERSION}.whl"
          WX_PYTHON_NEXTCLOUD_URL="https://cloud.uni-graz.at/index.php/s/YtX33kbasHMZdgs/download?path=${WHEEL_NAME}"

          echo "Checking URL for Python: ${NEXTCLOUD_URL}"
          echo "Checking URL for wxPython: ${WX_PYTHON_NEXTCLOUD_URL}"
          
          PYTHON_EXISTS=false
          WXPYTHON_EXISTS=false

          if curl -f -X GET "${NEXTCLOUD_URL}" --output /dev/null; then
            PYTHON_EXISTS=true
          fi

          if curl -f -X GET "${WX_PYTHON_NEXTCLOUD_URL}" --output /dev/null; then
            WXPYTHON_EXISTS=true
          fi

          if [ "$PYTHON_EXISTS" = true ] && [ "$WXPYTHON_EXISTS" = true ]; then
            echo "Both files exist. Skipping the process."
            echo "skip_process=true" >> $GITHUB_ENV
          else
            echo "One or both files do not exist. Continuing with the process."
            echo "skip_process=false" >> $GITHUB_ENV
          fi

      - name: create tmp
        if: env.skip_process == 'false'
        run: |
          sudo rm -rf /tmp_dir
          sudo mkdir /tmp_dir
          sudo chmod -R 777 /tmp_dir
          sudo chown -R $USER:$USER /tmp_dir

      - name: Set up dependencies
        if: env.skip_process == 'false'
        run: |
          if command -v apt-get > /dev/null; then
            sudo apt-get update || true
            packages=(
              git build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev
              curl libbz2-dev libsqlite3-dev libgtk-3-dev jq
              libxcb-cursor0 libxcb1 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-render0
              libxcb-shape0 libxcb-shm0 libxcb-util1 libxcb-xfixes0 libxcb-xinerama0 libxcb-xinput0 libxcb-xkb1 libxkbcommon-x11-0
              python3-pip python3-venv python3-dev
              freeglut3-dev libwebkit2gtk-4.0-dev libjpeg-dev libpng-dev libtiff-dev libsdl2-dev libnotify-dev libsm-dev
              libgtk-3-dev libgtk-3-0 libgtk-3-common libtiff5-dev libexpat1-dev libcurl4-gnutls-dev
            )
            for pkg in "${packages[@]}"; do
              sudo apt-get install -y "$pkg" || true
            done
          elif command -v pacman > /dev/null; then
            sudo pacman -Syu --noconfirm || true
            packages=(
              git base-devel zlib ncurses gdbm nss openssl readline libffi
              curl bzip2 sqlite gtk3 jq
              xcb-util-cursor xcb-util xcb-util-wm xcb-util-image xcb-util-keysyms xcb-render xcb-shape xcb-shm xcb-util xcb-xfixes xcb-xinerama xcb-xinput xcb-xkb xkbcommon-x11
              python-pip python-virtualenv python
              freeglut webkit2gtk libjpeg-turbo libpng libtiff sdl2 libnotify libsm
              gtk3 libtiff expat curl
            )
            for pkg in "${packages[@]}"; do
              sudo pacman -S --noconfirm "$pkg" || true
            done
          elif command -v dnf > /dev/null; then
            sudo dnf check-update || true
            packages=(
              git gcc gcc-c++ make zlib-devel ncurses-devel gdbm-devel nss-devel openssl-devel readline-devel libffi-devel
              curl bzip2-devel sqlite-devel gtk3 jq
              xcb-util-cursor xcb-util xcb-util-wm xcb-util-image xcb-util-keysyms xcb-util-renderutil xcb-util-shape xcb-util-xfixes xcb-util-xinerama xcb-util-xinput xcb-util-xkb xkbcommon-x11
              python3-pip python3-venv python3-devel
              freeglut-devel webkit2gtk3-devel libjpeg-devel libpng-devel libtiff-devel SDL2-devel libnotify-devel libSM-devel
              gtk3-devel gtk3 libtiff expat-devel libcurl-devel
            )
            for pkg in "${packages[@]}"; do
              sudo dnf install -y "$pkg" || true
            done
          elif command -v yum > /dev/null; then
            sudo yum check-update || true
            packages=(
              git gcc gcc-c++ make zlib-devel ncurses-devel gdbm-devel nss-devel openssl-devel readline-devel libffi-devel
              curl bzip2-devel sqlite-devel gtk3 jq
              xcb-util-cursor xcb-util xcb-util-wm xcb-util-image xcb-util-keysyms xcb-util-renderutil xcb-util-shape xcb-util-xfixes xcb-util-xinerama xcb-util-xinput xcb-util-xkb xkbcommon-x11
              python3-pip python3-venv python3-devel
              freeglut-devel webkit2gtk3-devel libjpeg-devel libpng-devel libtiff-devel SDL2-devel libnotify-devel libSM-devel
              gtk3-devel gtk3 libtiff expat-devel libcurl-devel
            )
            for pkg in "${packages[@]}"; do
              sudo yum install -y "$pkg" || true
            done
          else
            echo "Unsupported package manager"
            exit 1
          fi

      - name: Download and install Python
        if: env.skip_process == 'false'
        run: |
          cd /tmp_dir
          PYTHON_VERSION="${{ matrix.python_version }}"
          curl -O "https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz"
          tar -xf "Python-${PYTHON_VERSION}.tgz"
          cd "Python-${PYTHON_VERSION}"
          ./configure --enable-optimizations
          make -j "$(nproc)"
          sudo make altinstall

      - name: Create tarball of Python build and upload to nextcloud
        if: env.skip_process == 'false'
        run: |
          PYTHON_VERSION="${{ matrix.python_version }}"
          FILE_PATH="/tmp_dir/python_${PYTHON_VERSION}_${{ matrix.os }}.tar.gz"
          tar -czvf "$FILE_PATH" -C "/tmp_dir/Python-${PYTHON_VERSION}/" .
          curl -T "$FILE_PATH" -u "${{ secrets.NEXTCLOUD_ID_PYTHON }}:${{ secrets.NEXTCLOUD_PASS_PYTHON }}" -H "X-Requested-With: XMLHttpRequest" "https://cloud.uni-graz.at/public.php/webdav/"

      - name: Build wxPython in venv and upload to nextcloud
        if: env.skip_process == 'false'
        run: |
          PYTHON_VERSION="${{ matrix.python_version }}"
          SHORT_PYTHON_VERSION="${PYTHON_VERSION%.*}"
          PYTHON_BIN="python${SHORT_PYTHON_VERSION}"
          $PYTHON_BIN -m venv /tmp_dir/venv
          source /tmp_dir/venv/bin/activate
          pip install --upgrade pip
          pip install wheel
          mkdir /tmp_dir/wxpython
          cd /tmp_dir/wxpython
          pip download wxPython
          tar -xzf wxPython-*.tar.gz
          wxPython_dir=$(find . -type d -name "wxPython-*")
          cd "$wxPython_dir"
          pip wheel .
          python_major=$(python -c "import sys; print(sys.version_info.major)")
          python_minor=$(python -c "import sys; print(sys.version_info.minor)")
          wheel_file=$(ls wxPython-*.whl)
          identified_wheel_file="/tmp_dir/wxPython-0-cp${python_major}${python_minor}-cp${python_major}${python_minor}-linux_x86_64-${{ matrix.os }}.whl"
          cp "$wheel_file" "$identified_wheel_file"
          deactivate
          curl -T "$identified_wheel_file" -u "${{ secrets.NEXTCLOUD_ID_WXPYTHON }}:${{ secrets.NEXTCLOUD_PASS_WXPYTHON }}" -H "X-Requested-With: XMLHttpRequest" "https://cloud.uni-graz.at/public.php/webdav/"

      - name: clean up
        if: env.skip_process == 'false'
        run: |
          sudo rm -r /tmp_dir
